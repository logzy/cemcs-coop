// <auto-generated />
using System;
using COOP.Banking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COOP.Banking.Migrations
{
    [DbContext(typeof(CoopBankingDataContext))]
    [Migration("20210416021713_DecimalChange")]
    partial class DecimalChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeCategory")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Approver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ApproverRoleId")
                        .HasColumnType("int");

                    b.Property<int>("ApproverType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Approvers");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BankCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Beneficiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<bool>("Primary")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("MemberId");

                    b.ToTable("Beneficiaries");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.ConcurrentLoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ConcurrentLoanId")
                        .HasColumnType("int");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("ConcurrentLoans");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.CreditCommittee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PositionId");

                    b.ToTable("CreditCommittees");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.CreditCommitteeBalance", b =>
                {
                    b.Property<string>("EMPNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Executive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HAPL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LTLoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STLoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Savgs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TSL1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TSL2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TSL3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EMPNO");

                    b.ToTable("CreditCommitteeBalances");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("AnnualSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfHire")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResignationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StateOfOriginId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("PersonId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Executive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PositionId");

                    b.ToTable("Executives");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApprovalCount")
                        .HasColumnType("int");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<string>("BankCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuarantorApprovalCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("LoanCondition")
                        .HasColumnType("int");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("MethodOfCollectionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Principal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("RepaymentPeriod")
                        .HasColumnType("int");

                    b.Property<int>("RequiredGuarantorsCount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.HasIndex("MemberId");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanBeneficiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BeneficiaryId")
                        .HasColumnType("int");

                    b.Property<int>("LoanApplicationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeneficiaryId");

                    b.ToTable("LoanBeneficiaries");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("AdminChargeAmount")
                        .HasColumnType("real");

                    b.Property<int>("AdminChargeType")
                        .HasColumnType("int");

                    b.Property<bool>("AllowConcurent")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowPartialOffset")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowTenureAdjustment")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowTopUp")
                        .HasColumnType("bit");

                    b.Property<int>("ConcurrentLoanCount")
                        .HasColumnType("int");

                    b.Property<int>("ConcurrentQualifyingPeriods")
                        .HasColumnType("int");

                    b.Property<decimal>("ExistingLoanFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GuarantorCount")
                        .HasColumnType("int");

                    b.Property<decimal>("GuarantorMaximumAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<float>("IntrestRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsATargetLoan")
                        .HasColumnType("bit");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<decimal>("LumpSumSavingsAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaxMonthlyRepayPeriod")
                        .HasColumnType("int");

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("MinLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MinMonthlyRepayPeriod")
                        .HasColumnType("int");

                    b.Property<int>("MonthlyRepayPeriod")
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlySavingsAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PeriodBeforeOffset")
                        .HasColumnType("int");

                    b.Property<bool>("RequiresGuarantors")
                        .HasColumnType("bit");

                    b.Property<int>("ServiceYearDuration")
                        .HasColumnType("int");

                    b.Property<bool>("UseYearsOfService")
                        .HasColumnType("bit");

                    b.Property<float>("WaitingPeriod")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.HasIndex("MemberTypeId");

                    b.ToTable("LoanConfigs");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanGuarantor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuarantorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanApplicationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("LoanGuarantors");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanGuarantorConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GuarantorCount")
                        .HasColumnType("int");

                    b.Property<decimal>("GuarantorMaximumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GuarantorMinimumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanGuarantorConfigs");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanOffsetModeOfPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("LoanId")
                        .HasColumnType("int");

                    b.Property<int>("ModeOfPaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.HasIndex("ModeOfPaymentId");

                    b.ToTable("LoanOffsetModeOfPayments");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanRepayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DatePaid")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fees")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("LoanApplicationId")
                        .HasColumnType("int");

                    b.Property<bool?>("Paid")
                        .HasColumnType("bit");

                    b.Property<decimal>("Principal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("RepaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPayment")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("LoanRepayments");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ApprovalCount")
                        .HasColumnType("int");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasPaidFee")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RetirementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.MemberBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BalanceType")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberBalances");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.MemberSaving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<decimal>("SavingsAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberSavings");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.MemberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MemberTypes");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.MethodOfCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MethodOfCollections");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.ModeOfPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModeOfPayments");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.ModuleApprover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleApprovers");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.ModuleApproverNameStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovalLevel")
                        .HasColumnType("int");

                    b.Property<int>("ModuleApproverId")
                        .HasColumnType("int");

                    b.Property<string>("Usernames")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleApproverId");

                    b.ToTable("ModuleApproverNameStore");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.NextOfKin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentPersonId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("NextOfKins");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.PendingApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleApproverId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleApproverId");

                    b.ToTable("PendingApprovals");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.RegistrationFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RegistrationFees");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.RetireeBalance", b =>
                {
                    b.Property<string>("EMPNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LONGTERM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAVINGS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SHORTTERM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPECDEP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EMPNO");

                    b.ToTable("RetireeBalances");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Retireeexport", b =>
                {
                    b.Property<string>("EMPNO")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ALTEMAILADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ALTPHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIRECTPHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIVISIONNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMAILADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMPLOYEENO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMPLOYMENTDATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIRSTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JOBTITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOCATIONNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MIDDLENAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NATIONALITY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PINNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RETIREMENTDATE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SURNAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EMPNO");

                    b.ToTable("Retireeexport");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.SavingDepositLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("SavingsType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("SavingDepositLedgers");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.SavingDepositTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovalCount")
                        .HasColumnType("int");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("LastApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("SavingsType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("SavingDepositTransactions");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.SavingsConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MemberTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("MinimumSavingsAmount")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("MemberTypeId");

                    b.ToTable("SavingsConfigurations");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.TargetLoanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TargetLoanTypes");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.TransferApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ApprovalCount")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DestinationSavingsType")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("SourceSavingsType")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("TransferApplications");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.VoucherTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("VoucherTransactions");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.VoucherTransactionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherTransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VoucherTransactionDetails");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.WaiverApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ApplicatiinDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalCount")
                        .HasColumnType("int");

                    b.Property<string>("Commnents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ModeOfPaymentId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalWaiverFee")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("ModeOfPaymentId");

                    b.ToTable("WaiverApplication");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.WaiverApplicationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WaiverApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("WaiverTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WaiverApplicationId");

                    b.HasIndex("WaiverTypeId");

                    b.ToTable("WaiverApplicationDetails");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.WaiverType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WaiverTypes");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.WithdrawalApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ApprovalCount")
                        .HasColumnType("int");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("CollectionLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("MethodOfCollectionId")
                        .HasColumnType("int");

                    b.Property<int>("SourceSavingsType")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("MemberId");

                    b.HasIndex("MethodOfCollectionId");

                    b.ToTable("WithdrawalApplications");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Account", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Beneficiary", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.ConcurrentLoan", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.CreditCommittee", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Employee", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.EmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EmployeeType");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Executive", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanApplication", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanBeneficiary", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Beneficiary", "Beneficiary")
                        .WithMany()
                        .HasForeignKey("BeneficiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiary");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanConfig", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.MemberType", "MemberType")
                        .WithMany()
                        .HasForeignKey("MemberTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");

                    b.Navigation("MemberType");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanGuarantor", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.LoanApplication", "LoanApplication")
                        .WithMany("LoanGuarantors")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanGuarantorConfig", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanOffsetModeOfPayment", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.ModeOfPayment", "ModeOfPayment")
                        .WithMany()
                        .HasForeignKey("ModeOfPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");

                    b.Navigation("ModeOfPayment");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanRepayment", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Member", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.MemberBalance", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.MemberSaving", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.ModuleApprover", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.ModuleApproverNameStore", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.ModuleApprover", null)
                        .WithMany("ModuleApproverNameStores")
                        .HasForeignKey("ModuleApproverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.NextOfKin", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.PendingApproval", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.ModuleApprover", "ModuleApprover")
                        .WithMany()
                        .HasForeignKey("ModuleApproverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleApprover");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.Person", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.SavingDepositLedger", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.SavingDepositTransaction", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.SavingsConfiguration", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.MemberType", "MemberType")
                        .WithMany()
                        .HasForeignKey("MemberTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MemberType");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.TransferApplication", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.VoucherTransaction", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.WaiverApplication", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.ModeOfPayment", "ModeOfPayment")
                        .WithMany()
                        .HasForeignKey("ModeOfPaymentId");

                    b.Navigation("Member");

                    b.Navigation("ModeOfPayment");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.WaiverApplicationDetail", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.WaiverApplication", "WaiverApplication")
                        .WithMany("WaiverApplicationDetails")
                        .HasForeignKey("WaiverApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.WaiverType", "WaiverType")
                        .WithMany()
                        .HasForeignKey("WaiverTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WaiverApplication");

                    b.Navigation("WaiverType");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.WithdrawalApplication", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.MethodOfCollection", "MethodOfCollection")
                        .WithMany()
                        .HasForeignKey("MethodOfCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Member");

                    b.Navigation("MethodOfCollection");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COOP.Banking.BusinessEntities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("COOP.Banking.BusinessEntities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.LoanApplication", b =>
                {
                    b.Navigation("LoanGuarantors");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.ModuleApprover", b =>
                {
                    b.Navigation("ModuleApproverNameStores");
                });

            modelBuilder.Entity("COOP.Banking.BusinessEntities.WaiverApplication", b =>
                {
                    b.Navigation("WaiverApplicationDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
